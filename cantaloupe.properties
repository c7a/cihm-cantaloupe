# !! Leave blank to use the JVM default temporary directory.
temp_pathname =

# !! Configures the HTTP server. (Standalone mode only.)
http.enabled = true
http.host = 0.0.0.0
http.port = 8182
http.http2.enabled = false

# !! Configures the HTTPS server. (Standalone mode only.)
https.enabled = false
https.host = 0.0.0.0
https.port = 8183
# Secure HTTP/2 requires Java 9 or later.
https.http2.enabled = false

# !! Available values are `JKS` and `PKCS12`. (Standalone mode only.)
https.key_store_type = JKS
https.key_store_password = myPassword
https.key_store_path = /path/to/keystore.jks
https.key_password = myPassword

# !! Maximum size of the HTTP(S) request queue. Set to 0 to use the default.
http.accept_queue_limit = 0

# Base URI to use for internal links, such as Link headers and JSON-LD
# @id values, in a reverse-proxy context. This should only be used when
# X-Forwarded-* headers cannot be used instead. (See the user manual.)
base_uri =

# Normally, slashes in a URI path component must be percent-encoded as
# "%2F". If your proxy is not able to pass these through without decoding,
# you can define an alternate character or character sequence to substitute
# for a slash. Supply the non-percent-encoded version here, and use the
# percent-encoded version in URLs.
slash_substitute =

# Maximum number of pixels to return in a response, to prevent overloading
# the server. Requests for more pixels than this will receive an error
# response. Set to 0 for no maximum.
max_pixels = 400000000

# Maximum scale to allow (1.0 = full scale; 0 = no maximum).
max_scale = 1.0

# Errors will also be logged to the error log (if enabled).
print_stack_trace_on_error_pages = true

###########################################################################
# DELEGATE SCRIPT
###########################################################################

# !! Enables the delegate script: a Ruby script containing various delegate
# methods. (See the user manual.)
delegate_script.enabled = true

# !! This can be an absolute path, or a filename; if only a filename is
# specified, it will be searched for in the same folder as this file, and
# then the current working directory.
delegate_script.pathname = delegates.rb

# Enables the invocation cache, which caches method invocations and return
# values in memory. See the user manual for more information.
delegate_script.cache.enabled = true

###########################################################################
# ENDPOINTS
###########################################################################

# Enables the IIIF Image API 1.x endpoint, at /iiif/1.
endpoint.iiif.1.enabled = false

# Enables the IIIF Image API 2.x endpoint, at /iiif/2.
endpoint.iiif.2.enabled = true

# Controls the response Content-Disposition header for images. Allowed
# values are `inline`, `attachment`, and `none`. This can be overridden
# using the ?response-content-disposition query argument.
endpoint.iiif.content_disposition = inline

# Minimum size that will be used in info.json `sizes` keys.
endpoint.iiif.min_size = 64

# Minimum size that will be used in info.json `tiles` keys. See the user
# manual to learn how these are calculated.
endpoint.iiif.min_tile_size = 512

# If true, requests for sizes other than those specified in an info.json
# response will be denied.
endpoint.iiif.2.restrict_to_sizes = false

# Enables the Control Panel, at /admin.
endpoint.admin.enabled = false
endpoint.admin.username = admin
endpoint.admin.secret =

# Enables the administrative HTTP API. (See the user manual.)
endpoint.api.enabled = false

# HTTP Basic credentials to access the HTTP API.
endpoint.api.username =
endpoint.api.secret =

###########################################################################
# RESOLVERS
###########################################################################

# Uses one source for all requests. Available values are `FilesystemSource`,
# `HttpSource`, `JdbcSource`, `S3Source`, and `AzureStorageSource`.
source.static = environment_variable

# If true, `source.static` will be overridden, and the `source()` delegate
# method will be used to select a source per-request.
source.delegate = false

#----------------------------------------
# FilesystemSource
#----------------------------------------

# How to look up files. Allowed values are `BasicLookupStrategy` and
# `ScriptLookupStrategy`. ScriptLookupStrategy uses the delegate script for
# dynamic lookups; see the user manual.
FilesystemSource.lookup_strategy = ScriptLookupStrategy


#----------------------------------------
# S3Source
#----------------------------------------

# !! Endpoint URI.
# For AWS endpoints, see:
# https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region
S3Source.endpoint = environment_variable

# !! Credentials for your AWS account.
# See: http://aws.amazon.com/security-credentials
# Note that this info can be obtained from elsewhere rather than setting
# it here; see the user manual.
S3Source.access_key_id = environment_variable
S3Source.secret_key = environment_variable

# How to look up objects. Allowed values are `BasicLookupStrategy` and
# `ScriptLookupStrategy`. ScriptLookupStrategy uses a delegate method for
# dynamic lookups; see the user manual.
S3Source.lookup_strategy = ScriptLookupStrategy

# !! Name of the bucket containing images to be served.
S3Source.BasicLookupStrategy.bucket.name = 

# Path within the bucket that will be prefixed to the identifier in the URL.
# Trailing slash is important!
S3Source.BasicLookupStrategy.path_prefix =

# Path or extension that will be suffixed to the identifier in the URL.
S3Source.BasicLookupStrategy.path_suffix =

# Read data in chunks when it may be more efficient. (This also may end up
# being less efficient, depending on many variables; see the user manual.)
S3Source.chunking.enabled = true

# Chunk size.
S3Source.chunking.chunk_size = 512K

# The per-request chunk cache caches downloaded chunks in memory during
# a request, and clears them when the request is complete.
S3Source.chunking.cache.enabled = true

# Max per-request chunk cache size.
S3Source.chunking.cache.max_size = 5M

###########################################################################
# PROCESSORS
###########################################################################

#----------------------------------------
# Processor Selection
#----------------------------------------

# * If set to `AutomaticSelectionStrategy`, a "best" available processor
#   will be selected per-request based on formats and installed
#   dependencies.
# * If set to `ManualSelectionStrategy`, a processor will be chosen based
#   on the rest of the keys in this section.
processor.selection_strategy = ManualSelectionStrategy

# Built-in processors are `Java2dProcessor`, TurboJpegProcessor`,
# `KakaduNativeProcessor`, `OpenJpegProcessor`, `JaiProcessor`,
# `PdfBoxProcessor`, and `FfmpegProcessor`.
# Some of these have third-party dependencies and won't work out-of-the-box.

# These extension-specific definitions are optional.
processor.ManualSelectionStrategy.avi = FfmpegProcessor
processor.ManualSelectionStrategy.bmp =
processor.ManualSelectionStrategy.flv = FfmpegProcessor
processor.ManualSelectionStrategy.gif =
processor.ManualSelectionStrategy.jp2 = OpenJpegProcessor
processor.ManualSelectionStrategy.jpg = TurboJpegProcessor
processor.ManualSelectionStrategy.mov = FfmpegProcessor
processor.ManualSelectionStrategy.mp4 = FfmpegProcessor
processor.ManualSelectionStrategy.mpg = FfmpegProcessor
processor.ManualSelectionStrategy.pdf = PdfBoxProcessor
processor.ManualSelectionStrategy.png =
processor.ManualSelectionStrategy.tif = JaiProcessor
processor.ManualSelectionStrategy.webm = FfmpegProcessor

# Fall back to this processor for any formats not assigned above.
processor.ManualSelectionStrategy.fallback = Java2dProcessor

#----------------------------------------
# Global Processor Configuration
#----------------------------------------

# Controls how content is fed to processors from stream-based sources.
# * `StreamStrategy` will try to stream a source image from a source when
#   possible, and use `processor.fallback_retrieval_strategy` otherwise.
# * `DownloadStrategy` will download it to a temporary file, and delete
#   it after the request is complete.
# * `CacheStrategy` will download it into the source cache using
#   FilesystemCache, which must also be configured. (This will perform a
#   lot better than DownloadStrategy if you can spare the disk space.)
processor.stream_retrieval_strategy = StreamStrategy

# Controls how an incompatible StreamSource + FileProcessor combination is
# dealt with.
# * `DownloadStrategy` and `CacheStrategy` work the same as above.
# * `AbortStrategy` causes the request to fail.
processor.fallback_retrieval_strategy = CacheStrategy

# Resolution of vector rasterization (of e.g. PDFs) at a scale of 1.
processor.dpi = 150

# Color of the background when an image is rotated or alpha-flattened, for
# output formats that don't support transparency.
# This may not be respected for indexed color derivative images.
processor.background_color = white

# Available values are `bell`, `bspline`, `bicubic`, `box`, `hermite`,
# `lanczos3`, `mitchell`, `triangle`. (JaiProcessor ignores these.)
processor.downscale_filter = bicubic
processor.upscale_filter = bicubic

# Intensity of an unsharp mask from 0 to 1.
processor.sharpen = 0

# Attempts to copy source image metadata (EXIF, IPTC, XMP) into derivative
# images. (This is not foolproof; see the user manual.)
processor.metadata.preserve = false

# Whether to auto-rotate images using the EXIF `Orientation` field.
# The check for this field can impair performance slightly.
processor.metadata.respect_orientation = false

# Progressive JPEGs are usually more compact.
processor.jpg.progressive = true

# JPEG output quality (1-100).
processor.jpg.quality = 80

# TIFF output compression type. Available values are `Deflate`, `JPEG`,
# `LZW`, and `RLE`. Leave blank for no compression.
processor.tif.compression = LZW

#----------------------------------------
# FfmpegProcessor
#----------------------------------------

# Optional absolute path of the directory containing the FFmpeg binaries.
# Overrides the PATH.
FfmpegProcessor.path_to_binaries =

#----------------------------------------
# GraphicsMagickProcessor
#----------------------------------------

# !! Optional absolute path of the directory containing the GraphicsMagick
# binary. Overrides the PATH.
GraphicsMagickProcessor.path_to_binaries =

#----------------------------------------
# ImageMagickProcessor
#----------------------------------------

# !! Optional absolute path of the directory containing the ImageMagick
# binary. Overrides the PATH.
ImageMagickProcessor.path_to_binaries = /usr/local/bin

#----------------------------------------
# KakaduProcessor
#----------------------------------------

# Optional absolute path of the directory containing the Kakadu binaries.
# Overrides the PATH.
KakaduProcessor.path_to_binaries =

#----------------------------------------
# OpenJpegProcessor
#----------------------------------------

# Optional absolute path of the directory containing the OpenJPEG binaries.
# Overrides the PATH.
OpenJpegProcessor.path_to_binaries =

###########################################################################
# CLIENT-SIDE CACHING
###########################################################################

# Whether to enable the response Cache-Control header.
cache.client.enabled = true

cache.client.max_age = 2592000
cache.client.shared_max_age =
cache.client.public = true
cache.client.private = false
cache.client.no_cache = false
cache.client.no_store = false
cache.client.must_revalidate = false
cache.client.proxy_revalidate = false
cache.client.no_transform = true

###########################################################################
# SERVER-SIDE CACHING
###########################################################################

# N.B.: The source cache may be used if the
# `processor.stream_retrieval_strategy` and/or
# `processor.fallback_retrieval_strategy` keys are set to `CacheStrategy`.

# FilesystemCache is the only available source cache.
cache.server.source = FilesystemCache

# Amount of time source cache content remains valid. Set to blank or 0
# for forever.
cache.server.source.ttl_seconds = 432000

# Enables the derivative (processed image) cache.
cache.server.derivative.enabled = true

# Available values are `FilesystemCache`, `JdbcCache`, `RedisCache`,
# `HeapCache`, `AmazonS3Cache`, and `AzureStorageCache`.
cache.server.derivative = FilesystemCache

# Amount of time derivative cache content remains valid. Set to blank or 0
# for forever.
cache.server.derivative.ttl_seconds = 432000

# Whether to use the Java heap as a "level 1" cache for image infos, either
# independently or in front of a "level 2" derivative cache (if enabled).
cache.server.info.enabled = true

# If true, when a resolver reports that the requested source image has gone
# missing, all cached information relating to it (if any) will be deleted.
# (This is effectively always false when cache.server.resolve_first is also
# false.)
cache.server.purge_missing = false

# If true, the source image will be confirmed to exist before a cached copy
# is returned. If false, the cached copy will be returned without checking.
# Resolving first is safer but slower.
cache.server.resolve_first = false

# !! Enables the cache worker, which periodically purges invalid cache
# items in the background.
cache.server.worker.enabled = true

# !! The cache worker will start its shifts this many seconds apart.
cache.server.worker.interval = 86400

#----------------------------------------
# FilesystemCache
#----------------------------------------

# If this directory does not exist, it will be created automatically.
FilesystemCache.pathname = /var/cache/cantaloupe

# Levels of folder hierarchy in which to store cached images. Deeper depth
# results in fewer files per directory. Set to 0 to disable subfolders.
# Purge the cache after changing this.
FilesystemCache.dir.depth = 3

# Number of characters in hierarchy directory names. Should be set to
# 16^n < (max number of directory entries your filesystem can deal with).
# Purge the cache after changing this.
FilesystemCache.dir.name_length = 2

###########################################################################
# OVERLAYS
###########################################################################

# Whether to enable overlays.
overlays.enabled = false

###########################################################################
# REDACTIONS
###########################################################################

# See the user manual for information about how redactions work.
redaction.enabled = false

###########################################################################
# LOGGING
###########################################################################

#----------------------------------------
# Application Log
#----------------------------------------

# `trace`, `debug`, `info`, `warn`, `error`, `all`, or `off`
log.application.level = info

log.application.ConsoleAppender.enabled = true

# N.B.: Don't enable FileAppender and RollingFileAppender simultaneously!
log.application.FileAppender.enabled = false
log.application.FileAppender.pathname = /path/to/logs/application.log

log.application.RollingFileAppender.enabled = false
log.application.RollingFileAppender.pathname = /path/to/logs/application.log
log.application.RollingFileAppender.policy = TimeBasedRollingPolicy
log.application.RollingFileAppender.TimeBasedRollingPolicy.filename_pattern = /path/to/logs/application-%d{yyyy-MM-dd}.log
log.application.RollingFileAppender.TimeBasedRollingPolicy.max_history = 30

# See the "SyslogAppender" section for a list of facilities:
# http://logback.qos.ch/manual/appenders.html
log.application.SyslogAppender.enabled = false
log.application.SyslogAppender.host =
log.application.SyslogAppender.port = 514
log.application.SyslogAppender.facility = LOCAL0

#----------------------------------------
# Error Log
#----------------------------------------

# Application log messages with a severity of WARN or greater can be copied
# into a dedicated error log, which may make them easier to spot.

# N.B.: Don't enable FileAppender and RollingFileAppender simultaneously!
log.error.FileAppender.enabled = false
log.error.FileAppender.pathname = /path/to/logs/error.log

log.error.RollingFileAppender.enabled = false
log.error.RollingFileAppender.pathname = /path/to/logs/error.log
log.error.RollingFileAppender.policy = TimeBasedRollingPolicy
log.error.RollingFileAppender.TimeBasedRollingPolicy.filename_pattern = /path/to/logs/error-%d{yyyy-MM-dd}.log
log.error.RollingFileAppender.TimeBasedRollingPolicy.max_history = 30

#----------------------------------------
# Access Log
#----------------------------------------

log.access.ConsoleAppender.enabled = false

# N.B.: Don't enable FileAppender and RollingFileAppender simultaneously!
log.access.FileAppender.enabled = false
log.access.FileAppender.pathname = /path/to/logs/access.log

# RollingFileAppender is an alternative to using something like
# FileAppender + logrotate.
log.access.RollingFileAppender.enabled = false
log.access.RollingFileAppender.pathname = /path/to/logs/access.log
log.access.RollingFileAppender.policy = TimeBasedRollingPolicy
log.access.RollingFileAppender.TimeBasedRollingPolicy.filename_pattern = /path/to/logs/access-%d{yyyy-MM-dd}.log
log.access.RollingFileAppender.TimeBasedRollingPolicy.max_history = 30

# See the "SyslogAppender" section for a list of facilities:
# http://logback.qos.ch/manual/appenders.html
log.access.SyslogAppender.enabled = false
log.access.SyslogAppender.host =
log.access.SyslogAppender.port = 514
log.access.SyslogAppender.facility = LOCAL0
